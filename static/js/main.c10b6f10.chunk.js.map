{"version":3,"sources":["context/PlanetsContext.js","context/PlanetsProvider.js","components/ActiveFilters.js","components/FilterFormNumeric.js","components/SortForm.js","components/FilterForm.js","components/Loading.js","components/Table.js","App.js","index.js"],"names":["PlanetsContext","createContext","initialColumns","filterOptions","filterByName","name","filterByNumericValues","column","comparison","value","order","sort","PlanetsProvider","children","useState","data","setData","planets","setPlanets","filters","setFilters","columns","setColumns","loading","setLoading","useEffect","fetch","then","response","json","result","results","forEach","filterValues","sortedArray","array","planetA","planetB","columnA","parseInt","columnB","Infinity","sortArray","filter","planet","includesName","toLowerCase","includes","context","Provider","ActiveFilters","useContext","className","map","eachFilter","key","data-testid","type","disabled","onClick","handleDeleteFilter","FilterFormNumeric","setFilterValues","handleChange","target","onChange","columnOption","comparisonOption","placeholder","e","preventDefault","columnName","SortForm","sortBy","setSortBy","htmlFor","id","FilterForm","Loading","role","Table","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","App","ReactDOM","render","document","getElementById"],"mappings":"6MAIeA,EAFQC,0BCuBjBC,EAAiB,CACrB,kBACA,iBACA,WACA,gBACA,cAGIC,EAAgB,CACpBC,aAAc,CACZC,KAAM,IAERC,sBAAuB,CACrB,CACEC,OAAQ,GACRC,WAAY,GACZC,MAAO,KAGXC,MAAO,CACLH,OAAQ,OACRI,KAAM,QA2DKC,MAvDf,YAAwC,IAAbC,EAAY,EAAZA,SAAY,EACbC,mBAAS,IADI,mBAC9BC,EAD8B,KACxBC,EADwB,OAEPF,mBAAS,IAFF,mBAE9BG,EAF8B,KAErBC,EAFqB,OAGPJ,mBAASX,GAHF,mBAG9BgB,EAH8B,KAGrBC,EAHqB,OAIPN,mBAASZ,GAJF,mBAI9BmB,EAJ8B,KAIrBC,EAJqB,OAKPR,oBAAS,GALF,mBAK9BS,EAL8B,KAKrBC,EALqB,KAOrCC,qBAAU,WACRC,MAAM,kDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLd,EAAQc,EAAOC,SACfP,GAAW,QAEd,IAEHC,qBAAU,WAAO,IAEGpB,EAGdc,EAHFf,aAAgBC,KAChBC,EAEEa,EAFFb,sBACAI,EACES,EADFT,MAEFJ,EAAsB0B,SAAQ,SAACC,GAAkB,IACvC1B,EAA8B0B,EAA9B1B,OAAQC,EAAsByB,EAAtBzB,WAAYC,EAAUwB,EAAVxB,MActByB,EAhFM,SAACC,EAAOzB,GAAR,mBACbyB,EAAMxB,MAAK,SAACyB,EAASC,GACtB,IAAIC,EAAUC,SAASH,EAAQ1B,EAAMH,QAAS,IAC1CgC,SAASH,EAAQ1B,EAAMH,QAAS,IAChC6B,EAAQ1B,EAAMH,QACdiC,EAAUD,SAASF,EAAQ3B,EAAMH,QAAS,IAC1CgC,SAASF,EAAQ3B,EAAMH,QAAS,IAChC8B,EAAQ3B,EAAMH,QAGlB,MAFgB,YAAZ+B,IAAuBA,EAAUG,KACrB,YAAZD,IAAuBA,EAAUC,KACjCH,EAAUE,GAA0B,QAAf9B,EAAMC,KAbZ,EAcf2B,EAAUE,GAA0B,QAAf9B,EAAMC,MAC3B2B,EAAUE,GAA0B,SAAf9B,EAAMC,MAdZ,EAef2B,EAAUE,GAA0B,SAAf9B,EAAMC,KAhBZ,EAiBZ,MAkEe+B,CAbE3B,EAAK4B,QAAO,SAACC,GACjC,IAAMC,EAAeD,EAAOvC,KAAKyC,cAAcC,SAAS1C,EAAKyC,eAC7D,OAAQtC,GACR,IAAK,YACH,OAAO+B,SAASK,EAAOrC,GAAS,IAAMgC,SAAS9B,EAAO,KAAOoC,EAC/D,IAAK,YACH,OAAON,SAASK,EAAOrC,GAAS,IAAMgC,SAAS9B,EAAO,KAAOoC,EAC/D,IAAK,UACH,OAAON,SAASK,EAAOrC,GAAS,MAAQgC,SAAS9B,EAAO,KAAOoC,EACjE,QACE,OAAOA,MAGkCnC,GAC7CQ,EAAWgB,QAEZ,CAACnB,EAAMI,IAEV,IAAM6B,EAAU,CACd/B,UACAC,aACAC,UACAC,aACAC,UACAC,aACAC,WAGF,OAAO,kBAAC,EAAe0B,SAAhB,CAAyBxC,MAAQuC,GAAWnC,I,OCnGtC,SAASqC,IAAiB,IAAD,EACeC,qBAAWnD,GAAxDmB,EAD8B,EAC9BA,QAASC,EADqB,EACrBA,WAAYC,EADS,EACTA,QAASC,EADA,EACAA,WAC9BhB,EAA0Ba,EAA1Bb,sBAYR,OACE,yBAAK8C,UAAU,QACZ9C,EAAsB+C,KAAI,SAACC,GAAgB,IAClC/C,EAA8B+C,EAA9B/C,OAAQC,EAAsB8C,EAAtB9C,WAAYC,EAAU6C,EAAV7C,MAC5B,OAAKF,EAEH,yBAAK6C,UAAU,mBAAmBG,IAAMhD,EAASiD,cAAY,UAC3D,2BACEC,KAAK,OACLL,UAAU,wBACV3C,MAAK,UAAMF,EAAN,YAAgBC,EAAhB,YAA8BC,GACnCiD,UAAQ,IAEV,4BACEN,UAAU,4BACVK,KAAK,SACLE,QAAU,kBA1BK,SAACpD,GAC1Be,EAAW,GAAD,mBAAKD,GAAL,CAAcd,KACxBa,EAAW,2BACND,GADK,IAERb,sBAAuBA,EAAsBqC,QAC3C,SAACW,GAAD,OAAgBA,EAAW/C,SAAWA,QAqBhBqD,CAAmBrD,KAHrC,MATgB,O,WClBb,SAASsD,IAAqB,IAAD,EACWV,qBAAWnD,GAAxDmB,EADkC,EAClCA,QAASC,EADyB,EACzBA,WAAYC,EADa,EACbA,QAASC,EADI,EACJA,WADI,EAGFR,mBAAS,IAHP,mBAGnCmB,EAHmC,KAGrB6B,EAHqB,KAKlCxD,EAA0Ba,EAA1Bb,sBACAC,EAA8B0B,EAA9B1B,OAAQC,EAAsByB,EAAtBzB,WAAYC,EAAUwB,EAAVxB,MAI5BgB,qBAAU,WACRqC,EAAgB,CACdvD,OAAQc,EAAQ,GAChBb,WAAY,YACZC,MAAO,QAER,CAACY,IAEJ,IAAM0C,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBF,EAAgB,2BACX7B,GADU,kBAEZ+B,EAAO3D,KAAO2D,EAAOvD,UAc1B,OACE,0BAAM2C,UAAU,2BACd,4BACE3C,MAAQF,EACRF,KAAK,SACL4D,SAAWF,EACXP,cAAY,gBACZJ,UAAU,oBAET/B,EAAQgC,KAAI,SAACa,GAAD,OACX,4BAAQX,IAAMW,GAAgBA,OAGlC,4BACEzD,MAAQD,EACRH,KAAK,aACL4D,SAAWF,EACXP,cAAY,oBACZJ,UAAU,oBA7CI,CAAC,YAAa,YAAa,WA+C5BC,KAAI,SAACc,GAAD,OACf,4BAAQZ,IAAMY,GAAoBA,OAGtC,2BACEV,KAAK,SACLhD,MAAQA,EACRJ,KAAK,QACLmD,cAAY,eACZY,YAAY,IACZH,SAAWF,EACXX,UAAU,sBAEZ,4BACEK,KAAK,SACLD,cAAY,gBACZG,QA9Ce,SAACU,GACpBA,EAAEC,iBACG/D,IACLa,EAAW,2BACND,GADK,IAERb,sBAAsB,GAAD,mBAAMA,GAAN,CAA6B2B,OAEpDX,EAAWD,EAAQsB,QAAO,SAAC4B,GAAD,OAAgBhE,IAAWgE,QAwCjDnB,UAAU,gCAJZ,WCpES,SAASoB,IAAY,IAAD,EACDrB,qBAAWnD,GAAnCmB,EADyB,EACzBA,QAASC,EADgB,EAChBA,WADgB,EAGLN,mBAAS,CACnCP,OAAQ,OACRI,KAAM,QALyB,mBAG1B8D,EAH0B,KAGlBC,EAHkB,KAQzBnE,EAAiBkE,EAAjBlE,OAAQI,EAAS8D,EAAT9D,KAwBVoD,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBU,EAAU,2BACLD,GADI,kBAENT,EAAO3D,KAAO2D,EAAOvD,UAI1B,OACE,0BAAM2C,UAAU,2BACd,4BACE3C,MAAQF,EACRF,KAAK,SACL4D,SAAWF,EACXP,cAAY,cACZJ,UAAU,oBApCA,CACd,OACA,kBACA,iBACA,WACA,UACA,UACA,gBACA,cA8BaC,KAAI,SAACa,GAAD,OACX,4BAAQX,IAAMW,GAAgBA,OAGlC,8BACE,yBAAKd,UAAU,cACb,2BAAOuB,QAAQ,MAAMvB,UAAU,oBAA/B,YAEE,2BACEK,KAAK,QACLD,cAAY,wBACZ/C,MAAM,MACNmE,GAAG,MACHvE,KAAK,OACL4D,SAAWF,EACXX,UAAU,4BAIhB,yBAAKA,UAAU,cACb,2BAAOuB,QAAQ,OAAOvB,UAAU,oBAAhC,aAEE,2BACEK,KAAK,QACLD,cAAY,yBACZ/C,MAAM,OACNmE,GAAG,OACHX,SAAWF,EACX1D,KAAK,OACL+C,UAAU,6BAKlB,4BACEK,KAAK,SACLD,cAAY,qBACZG,QAhEa,SAACU,GAClBA,EAAEC,iBACFlD,EAAW,2BACND,GADK,IAERT,MAAO,CACLH,SACAI,YA2DAyC,UAAU,gCAJZ,SC/ES,SAASyB,IAAc,IAAD,EACH1B,qBAAWnD,GAAnCmB,EAD2B,EAC3BA,QAASC,EADkB,EAClBA,WACOf,EAAWc,EAA3Bf,aAAgBC,KAWxB,OACE,yBAAK+C,UAAU,6BACb,kBAACS,EAAD,MACA,kBAACW,EAAD,MACA,0BAAMpB,UAAU,QACd,2BACEK,KAAK,OACLhD,MAAQJ,EACR4D,SAjBa,SAACI,GACpBjD,EAAW,2BACND,GADK,IAERf,aAAc,CACZC,KAAMgE,EAAEL,OAAOvD,WAcb+C,cAAY,cACZY,YAAY,iBACZhB,UAAU,uBAGd,kBAACF,EAAD,OC9BS,SAAS4B,IAEtB,OADoB3B,qBAAWnD,GAAvBuB,QAGN,yBAAK6B,UAAU,0BACb,yBAAKA,UAAU,sDACb,yBAAKA,UAAU,iBAAiB2B,KAAK,UACnC,0BAAM3B,UAAU,mBAAhB,iBALa,GCFR,SAAS4B,IAAS,IACvB/D,EAAYkC,qBAAWnD,GAAvBiB,QACR,OACE,2BAAOmC,UAAU,6CACf,2BAAOA,UAAU,gBACf,4BACE,oCACA,+CACA,8CACA,wCACA,uCACA,uCACA,uCACA,6CACA,0CACA,qCACA,uCACA,sCACA,qCAGJ,+BACInC,EAAQoC,KAAI,SAACT,GAAD,OACZ,wBAAIW,IAAMX,EAAOvC,MACf,wBAAImD,cAAY,eAAeZ,EAAOvC,MACtC,4BAAKuC,EAAOqC,iBACZ,4BAAKrC,EAAOsC,gBACZ,4BAAKtC,EAAOuC,UACZ,4BAAKvC,EAAOwC,SACZ,4BAAKxC,EAAOyC,SACZ,4BAAKzC,EAAO0C,SACZ,4BAAK1C,EAAO2C,eACZ,4BAAK3C,EAAO4C,YACZ,4BAAK5C,EAAO6C,OACZ,4BAAK7C,EAAO8C,SACZ,4BAAK9C,EAAO+C,QACZ,4BAAK/C,EAAOgD,W,MCpBTC,MAXf,WACE,OACE,kBAAC,EAAD,KACE,wBAAIzC,UAAU,OAAd,6BACA,kBAACyB,EAAD,MACA,kBAACG,EAAD,MACA,kBAACF,EAAD,QCVNgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c10b6f10.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\n\nexport default PlanetsContext;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\n\nconst ORDER_POSITIVE = 1;\nconst ORDER_NEGATIVE = -1;\n\nconst sortArray = (array, order) => [\n  ...array.sort((planetA, planetB) => {\n    let columnA = parseInt(planetA[order.column], 10)\n      ? parseInt(planetA[order.column], 10)\n      : planetA[order.column];\n    let columnB = parseInt(planetB[order.column], 10)\n      ? parseInt(planetB[order.column], 10)\n      : planetB[order.column];\n    if (columnA === 'unknown') columnA = Infinity;\n    if (columnB === 'unknown') columnB = Infinity;\n    if (columnA > columnB && order.sort === 'ASC') return ORDER_POSITIVE;\n    if (columnA < columnB && order.sort === 'ASC') return ORDER_NEGATIVE;\n    if (columnA > columnB && order.sort === 'DESC') return ORDER_NEGATIVE;\n    if (columnA < columnB && order.sort === 'DESC') return ORDER_POSITIVE;\n    return 0;\n  }),\n];\n\nconst initialColumns = [\n  'rotation_period',\n  'orbital_period',\n  'diameter',\n  'surface_water',\n  'population',\n];\n\nconst filterOptions = {\n  filterByName: {\n    name: '',\n  },\n  filterByNumericValues: [\n    {\n      column: '',\n      comparison: '',\n      value: '',\n    },\n  ],\n  order: {\n    column: 'name',\n    sort: 'ASC',\n  },\n};\n\nfunction PlanetsProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [filters, setFilters] = useState(filterOptions);\n  const [columns, setColumns] = useState(initialColumns);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('https://swapi-trybe.herokuapp.com/api/planets/')\n      .then((response) => response.json())\n      .then((result) => {\n        setData(result.results);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    const {\n      filterByName: { name },\n      filterByNumericValues,\n      order,\n    } = filters;\n    filterByNumericValues.forEach((filterValues) => {\n      const { column, comparison, value } = filterValues;\n      const filteredArray = data.filter((planet) => {\n        const includesName = planet.name.toLowerCase().includes(name.toLowerCase());\n        switch (comparison) {\n        case 'maior que':\n          return parseInt(planet[column], 10) > parseInt(value, 10) && includesName;\n        case 'menor que':\n          return parseInt(planet[column], 10) < parseInt(value, 10) && includesName;\n        case 'igual a':\n          return parseInt(planet[column], 10) === parseInt(value, 10) && includesName;\n        default:\n          return includesName;\n        }\n      });\n      const sortedArray = sortArray(filteredArray, order);\n      setPlanets(sortedArray);\n    });\n  }, [data, filters]);\n\n  const context = {\n    planets,\n    setPlanets,\n    filters,\n    setFilters,\n    columns,\n    setColumns,\n    loading,\n  };\n\n  return <PlanetsContext.Provider value={ context }>{children}</PlanetsContext.Provider>;\n}\n\nexport default PlanetsProvider;\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\n\nexport default function ActiveFilters() {\n  const { filters, setFilters, columns, setColumns } = useContext(PlanetsContext);\n  const { filterByNumericValues } = filters;\n\n  const handleDeleteFilter = (column) => {\n    setColumns([...columns, column]);\n    setFilters({\n      ...filters,\n      filterByNumericValues: filterByNumericValues.filter(\n        (eachFilter) => eachFilter.column !== column,\n      ),\n    });\n  };\n\n  return (\n    <div className=\"mx-3\">\n      {filterByNumericValues.map((eachFilter) => {\n        const { column, comparison, value } = eachFilter;\n        if (!column) return '';\n        return (\n          <div className=\"input-group mb-1\" key={ column } data-testid=\"filter\">\n            <input\n              type=\"text\"\n              className=\"form-control col-xs-3\"\n              value={ `${column} ${comparison} ${value}` }\n              disabled\n            />\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={ () => handleDeleteFilter(column) }\n            >\n              X\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\n\nexport default function FilterFormNumeric() {\n  const { filters, setFilters, columns, setColumns } = useContext(PlanetsContext);\n\n  const [filterValues, setFilterValues] = useState({});\n\n  const { filterByNumericValues } = filters;\n  const { column, comparison, value } = filterValues;\n\n  const comparisons = ['maior que', 'menor que', 'igual a'];\n\n  useEffect(() => {\n    setFilterValues({\n      column: columns[0],\n      comparison: 'maior que',\n      value: '0',\n    });\n  }, [columns]);\n\n  const handleChange = ({ target }) => {\n    setFilterValues({\n      ...filterValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const handleFilter = (e) => {\n    e.preventDefault();\n    if (!column) return;\n    setFilters({\n      ...filters,\n      filterByNumericValues: [...filterByNumericValues, filterValues],\n    });\n    setColumns(columns.filter((columnName) => column !== columnName));\n  };\n\n  return (\n    <form className=\"d-flex flex-column mx-3\">\n      <select\n        value={ column }\n        name=\"column\"\n        onChange={ handleChange }\n        data-testid=\"column-filter\"\n        className=\"form-select mb-1\"\n      >\n        {columns.map((columnOption) => (\n          <option key={ columnOption }>{columnOption}</option>\n        ))}\n      </select>\n      <select\n        value={ comparison }\n        name=\"comparison\"\n        onChange={ handleChange }\n        data-testid=\"comparison-filter\"\n        className=\"form-select mb-1\"\n      >\n        {comparisons.map((comparisonOption) => (\n          <option key={ comparisonOption }>{comparisonOption}</option>\n        ))}\n      </select>\n      <input\n        type=\"number\"\n        value={ value }\n        name=\"value\"\n        data-testid=\"value-filter\"\n        placeholder=\"0\"\n        onChange={ handleChange }\n        className=\"form-control mb-1\"\n      />\n      <button\n        type=\"submit\"\n        data-testid=\"button-filter\"\n        onClick={ handleFilter }\n        className=\"btn btn-outline-primary mb-3\"\n      >\n        Filter\n      </button>\n    </form>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\n\nexport default function SortForm() {\n  const { filters, setFilters } = useContext(PlanetsContext);\n\n  const [sortBy, setSortBy] = useState({\n    column: 'name',\n    sort: 'ASC',\n  });\n\n  const { column, sort } = sortBy;\n\n  const columns = [\n    'name',\n    'rotation_period',\n    'orbital_period',\n    'diameter',\n    'climate',\n    'terrain',\n    'surface_water',\n    'population',\n  ];\n\n  const handleSort = (e) => {\n    e.preventDefault();\n    setFilters({\n      ...filters,\n      order: {\n        column,\n        sort,\n      },\n    });\n  };\n\n  const handleChange = ({ target }) => {\n    setSortBy({\n      ...sortBy,\n      [target.name]: target.value,\n    });\n  };\n\n  return (\n    <form className=\"d-flex flex-column mx-3\">\n      <select\n        value={ column }\n        name=\"column\"\n        onChange={ handleChange }\n        data-testid=\"column-sort\"\n        className=\"form-select mb-1\"\n      >\n        {columns.map((columnOption) => (\n          <option key={ columnOption }>{columnOption}</option>\n        ))}\n      </select>\n      <span>\n        <div className=\"form-check\">\n          <label htmlFor=\"ASC\" className=\"form-check-label\">\n            Ascendent\n            <input\n              type=\"radio\"\n              data-testid=\"column-sort-input-asc\"\n              value=\"ASC\"\n              id=\"ASC\"\n              name=\"sort\"\n              onChange={ handleChange }\n              className=\"form-check-input mb-1\"\n            />\n          </label>\n        </div>\n        <div className=\"form-check\">\n          <label htmlFor=\"DESC\" className=\"form-check-label\">\n            Descendent\n            <input\n              type=\"radio\"\n              data-testid=\"column-sort-input-desc\"\n              value=\"DESC\"\n              id=\"DESC\"\n              onChange={ handleChange }\n              name=\"sort\"\n              className=\"form-check-input mb-1\"\n            />\n          </label>\n        </div>\n      </span>\n      <button\n        type=\"submit\"\n        data-testid=\"column-sort-button\"\n        onClick={ handleSort }\n        className=\"btn btn-outline-primary mb-3\"\n      >\n        Sort\n      </button>\n    </form>\n  );\n}\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport ActiveFilters from './ActiveFilters';\nimport FilterFormNumeric from './FilterFormNumeric';\nimport SortForm from './SortForm';\n\nexport default function FilterForm() {\n  const { filters, setFilters } = useContext(PlanetsContext);\n  const { filterByName: { name } } = filters;\n\n  const handleChange = (e) => {\n    setFilters({\n      ...filters,\n      filterByName: {\n        name: e.target.value,\n      },\n    });\n  };\n\n  return (\n    <div className=\"d-flex flex-row flex-wrap\">\n      <FilterFormNumeric />\n      <SortForm />\n      <form className=\"mx-3\">\n        <input\n          type=\"text\"\n          value={ name }\n          onChange={ handleChange }\n          data-testid=\"name-filter\"\n          placeholder=\"Search by name\"\n          className=\"form-control mb-3\"\n        />\n      </form>\n      <ActiveFilters />\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\n\nexport default function Loading() {\n  const { loading } = useContext(PlanetsContext);\n  if (!loading) return '';\n  return (\n    <div className=\"position-relative mt-5\">\n      <div className=\"position-absolute top-50 start-50 translate-middle\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\n\nexport default function Table() {\n  const { planets } = useContext(PlanetsContext);\n  return (\n    <table className=\"table table-hover table-dark align-middle\">\n      <thead className=\"align-middle\">\n        <tr>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          <th>Films</th>\n          <th>Created</th>\n          <th>Edited</th>\n          <th>URL</th>\n        </tr>\n      </thead>\n      <tbody>\n        { planets.map((planet) => (\n          <tr key={ planet.name }>\n            <td data-testid=\"planet-name\">{planet.name}</td>\n            <td>{planet.rotation_period}</td>\n            <td>{planet.orbital_period}</td>\n            <td>{planet.diameter}</td>\n            <td>{planet.climate}</td>\n            <td>{planet.gravity}</td>\n            <td>{planet.terrain}</td>\n            <td>{planet.surface_water}</td>\n            <td>{planet.population}</td>\n            <td>{planet.films}</td>\n            <td>{planet.created}</td>\n            <td>{planet.edited}</td>\n            <td>{planet.url}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react';\nimport PlanetsProvider from './context/PlanetsProvider';\nimport FilterForm from './components/FilterForm';\nimport Loading from './components/Loading';\nimport Table from './components/Table';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <PlanetsProvider>\n      <h1 className=\"m-3\">Star Wars Planet Searcher</h1>\n      <FilterForm />\n      <Table />\n      <Loading />\n    </PlanetsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}